{"ast":null,"code":"import rootSaga from \"./ducks/rootSaga\";\n\nfunction configureStore(preloadedState) {\n  /**\n   * Recreate the stdChannel (saga middleware) with every context.\n   */\n  // const sagaMiddleware = createSagaMiddleware();\n  // const composeEnhancers =\n  //   typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  //     ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n  //     : compose;\n\n  /**\n   * Since Next.js does server-side rendering, you are REQUIRED to pass\n   * `preloadedState` when creating the store.\n   */\n  // const store = createStore(\n  //   combineReducers(reducers),\n  //   preloadedState,\n  //   composeEnhancers(applyMiddleware(sagaMiddleware)),\n  // );\n\n  /**\n   * next-redux-saga depends on `sagaTask` being attached to the store.\n   * It is used to await the rootSaga task before sending results to the client.\n   */\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/luxstay/Desktop/zmooz/libraries/store/configStore.ts"],"names":["rootSaga","configureStore","preloadedState","store","sagaTask","sagaMiddleware","run"],"mappings":"AAIA,OAAOA,QAAP;;AAIA,SAASC,cAAT,CAAwBC,cAAxB,EAA0D;AACxD;;;AAGA;AACA;AACA;AACA;AACA;;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AACA;;;;AAIAC,EAAAA,KAAK,CAACC,QAAN,GAAiBC,cAAc,CAACC,GAAf,CAAmBN,QAAnB,CAAjB;AACA,SAAOG,KAAP;AACD;;AAED,eAAeF,cAAf","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { ApplicationState } from '@/typings.d';\nimport rootSaga from './ducks/rootSaga';\n\nimport * as reducers from './ducks';\n\nfunction configureStore(preloadedState: ApplicationState) {\n  /**\n   * Recreate the stdChannel (saga middleware) with every context.\n   */\n  // const sagaMiddleware = createSagaMiddleware();\n  // const composeEnhancers =\n  //   typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  //     ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n  //     : compose;\n  /**\n   * Since Next.js does server-side rendering, you are REQUIRED to pass\n   * `preloadedState` when creating the store.\n   */\n  // const store = createStore(\n  //   combineReducers(reducers),\n  //   preloadedState,\n  //   composeEnhancers(applyMiddleware(sagaMiddleware)),\n  // );\n  /**\n   * next-redux-saga depends on `sagaTask` being attached to the store.\n   * It is used to await the rootSaga task before sending results to the client.\n   */\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}