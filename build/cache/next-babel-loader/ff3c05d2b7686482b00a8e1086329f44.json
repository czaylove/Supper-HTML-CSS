{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport 'moment/locale/vi';\nimport 'antd/dist/antd.less';\nimport { Provider } from 'react-redux';\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport moment from 'moment';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { appWithTranslation, i18n } from \"../libraries/i18n\";\nimport configStore from \"../libraries/store/configStore\";\n\nif (process.env.NODE_ENV !== 'production' && process.browser) {\n  var _require = require('react-perf-devtool'),\n      registerObserver = _require.registerObserver; // eslint-disable-line\n\n\n  registerObserver();\n} // Simple, no?\n\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is\n * a server side or client side\n * @param {Request} options.req NodeJS Request object\n * (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object\n * (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key CONFIGe used to\n * preserve store in global namespace for safe HMR\n */\n\n\nvar makeStore = function makeStore(initialState) {\n  return configStore(initialState);\n};\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      moment.locale(i18n.language);\n      return __jsx(Container, null, __jsx(Provider, {\n        store: store\n      }, __jsx(Component, pageProps)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n\n                if (!Component.getInitialProps) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return Component.getInitialProps(ctx);\n\n              case 4:\n                _context.t0 = _context.sent;\n                _context.next = 8;\n                break;\n\n              case 7:\n                _context.t0 = {};\n\n              case 8:\n                pageProps = _context.t0;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(makeStore, {\n  debug: true\n})(appWithTranslation(withReduxSaga(MyApp)));","map":{"version":3,"sources":["/Users/luxstay/Desktop/zmooz/pages/_app.tsx"],"names":["Provider","App","Container","React","moment","withRedux","withReduxSaga","appWithTranslation","i18n","configStore","process","env","NODE_ENV","browser","require","registerObserver","makeStore","initialState","MyApp","props","Component","pageProps","store","locale","language","ctx","getInitialProps","debug"],"mappings":";;;;;;;;AAAA,OAAO,kBAAP;AACA,OAAO,qBAAP;AAEA,SAASA,QAAT,QAAyB,aAAzB;AAEA,OAAOC,GAAP,IAAcC,SAAd,QAA2C,UAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAGA,SAASC,kBAAT,EAA6BC,IAA7B;AACA,OAAOC,WAAP;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCF,OAAO,CAACG,OAArD,EAA8D;AAAA,iBAC/BC,OAAO,CAAC,oBAAD,CADwB;AAAA,MACpDC,gBADoD,YACpDA,gBADoD,EACA;;;AAC5DA,EAAAA,gBAAgB;AACjB,C,CAED;;AACA;;;;;;;;;;;;;;AAYA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD;AAAA,SAAoCR,WAAW,CAACQ,YAAD,CAA/C;AAAA,CAAlB;;IAEMC,K;;;;;;;;;;;;;6BASK;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,KADvB,eACuBA,KADvB;AAEPlB,MAAAA,MAAM,CAACmB,MAAP,CAAcf,IAAI,CAACgB,QAAnB;AACA,aACE,MAAC,SAAD,QACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEF;AAAjB,SACE,MAAC,SAAD,EAAeD,SAAf,CADF,CADF,CADF;AAOD;;;;;;;;;;;;AAlB8BD,gBAAAA,S,QAAAA,S,EAAWK,G,QAAAA,G;;qBACtBL,SAAS,CAACM,e;;;;;;uBAClBN,SAAS,CAACM,eAAV,CAA0BD,GAA1B,C;;;;;;;;8BACN,E;;;AAFEJ,gBAAAA,S;iDAIC;AAAEA,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EANSpB,G;;AAsBpB,eAAeI,SAAS,CAACW,SAAD,EAAY;AAAEW,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAAT,CACbpB,kBAAkB,CAACD,aAAa,CAACY,KAAD,CAAd,CADL,CAAf","sourcesContent":["import 'moment/locale/vi';\nimport 'antd/dist/antd.less';\n\nimport { Provider } from 'react-redux';\nimport { Store } from 'redux';\nimport App, { Container, AppContext } from 'next/app';\nimport React from 'react';\nimport moment from 'moment';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { ApplicationState } from '@/typings.d';\n\nimport { appWithTranslation, i18n } from '@/libraries/i18n';\nimport configStore from '@/libraries/store/configStore';\n\nif (process.env.NODE_ENV !== 'production' && process.browser) {\n  const { registerObserver } = require('react-perf-devtool'); // eslint-disable-line\n  registerObserver();\n}\n\n// Simple, no?\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is\n * a server side or client side\n * @param {Request} options.req NodeJS Request object\n * (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object\n * (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key CONFIGe used to\n * preserve store in global namespace for safe HMR\n */\nconst makeStore = (initialState: ApplicationState) => configStore(initialState);\n\nclass MyApp extends App<{ store: Store<ApplicationState> }> {\n  static async getInitialProps({ Component, ctx }: AppContext) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    moment.locale(i18n.language);\n    return (\n      <Container>\n        <Provider store={store}>\n          <Component {...pageProps} />\n        </Provider>\n      </Container>\n    );\n  }\n}\n\nexport default withRedux(makeStore, { debug: true })(\n  appWithTranslation(withReduxSaga(MyApp)),\n);\n"]},"metadata":{},"sourceType":"module"}